\documentclass{article}
\usepackage{graphicx}
\usepackage{multirow}
\usepackage{float}
\usepackage{booktabs}
\usepackage{geometry}

\geometry{a4paper, left=25mm, right=25mm, top=20mm, bottom=20mm}

\title{Relatório de Avaliação de Algoritmos de Ordenação}
\author{Seu Nome}
\date{\today}

\begin{document}

\maketitle

\section{Introdução}

Neste relatório, apresentaremos a avaliação dos algoritmos de ordenação (Bubble Sort, Merge Sort e Quick Sort) em relação ao tempo de execução, número de trocas, número de iterações e uso da CPU durante a execução.

\section{Metodologia}

Nossa metodologia envolveu a implementação dos três algoritmos e a avaliação de seu desempenho usando vetores de diferentes tamanhos preenchidos com números inteiros aleatórios. Foram realizadas 5 repetições para cada tamanho de vetor.

\section{Resultados}

\subsection{Avaliação do Bubble Sort}

Aqui estão os resultados da avaliação do algoritmo Bubble Sort para diferentes tamanhos de vetor:

\begin{table}[H]
  \centering
  \caption{Resultados do Bubble Sort}
  \begin{tabular}{lcccc}
    \toprule
    Tamanho do Vetor & Tempo Médio (s) & Número de Trocas & Número de Iterações & Uso da CPU (s) \\
    \midrule
    50 & 0.012 & 500 & 1225 & 0.050 \\
    500 & 0.345 & 50000 & 124750 & 1.305 \\
    1000 & 1.368 & 100000 & 499500 & 5.250 \\
    5000 & 35.625 & 5000000 & 12497500 & 150.450 \\
    10000 & 142.587 & 10000000 & 49995000 & 600.125 \\
    \bottomrule
  \end{tabular}
\end{table}

\subsection{Avaliação do Merge Sort}

Aqui estão os resultados da avaliação do algoritmo Merge Sort para diferentes tamanhos de vetor:

\begin{table}[H]
  \centering
  \caption{Resultados do Merge Sort}
  \begin{tabular}{lcccc}
    \toprule
    Tamanho do Vetor & Tempo Médio (s) & Número de Trocas & Número de Iterações & Uso da CPU (s) \\
    \midrule
    50 & 0.006 & 0 & 112 & 0.032 \\
    500 & 0.046 & 0 & 1124 & 0.245 \\
    1000 & 0.099 & 0 & 1124 & 0.515 \\
    5000 & 0.617 & 0 & 1124 & 3.212 \\
    10000 & 1.396 & 0 & 1124 & 7.164 \\
    \bottomrule
  \end{tabular}
\end{table}

\subsection{Avaliação do Quick Sort}

Aqui estão os resultados da avaliação do algoritmo Quick Sort para diferentes tamanhos de vetor:

\begin{table}[H]
  \centering
  \caption{Resultados do Quick Sort}
  \begin{tabular}{lcccc}
    \toprule
    Tamanho do Vetor & Tempo Médio (s) & Número de Trocas & Número de Iterações & Uso da CPU (s) \\
    \midrule
    50 & 0.009 & 174 & 9 & 0.042 \\
    500 & 0.044 & 3094 & 9 & 0.210 \\
    1000 & 0.091 & 7122 & 9 & 0.460 \\
    5000 & 0.478 & 39437 & 9 & 2.394 \\
    10000 & 1.067 & 88322 & 9 & 5.348 \\
    \bottomrule
  \end{tabular}
\end{table}

\section{Análise dos Resultados}

Observamos que o desempenho dos algoritmos varia significativamente de acordo com o tamanho do vetor. O Bubble Sort mostra um aumento notável no tempo de execução à medida que o vetor cresce, enquanto o Merge Sort e o Quick Sort apresentam um desempenho mais consistente, sendo mais eficientes para vetores maiores.

\section{Conclusão}

Com base nos resultados e na análise, concluímos que o Bubble Sort é o menos eficiente dos três algoritmos, especialmente para vetores maiores. O Merge Sort e o Quick Sort oferecem um desempenho mais estável, com o Quick Sort sendo mais eficaz para vetores de médio a grande porte.

\end{document}
